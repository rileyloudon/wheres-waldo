{"version":3,"sources":["img/pallet-town-on-parade-title.png","components/Header.js","firebase.js","components/Instructions.js","img/pallet-town-on-parade-gameboard.jpg","img/pokeball.svg","components/Gameboard.js","components/GameOver.js","components/Game.js","components/Leaderboards.js","App.js","index.js"],"names":["Header","id","src","title","alt","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","currentUser","auth","anonSignIn","signInAnonymously","Instructions","props","loadingPokemon","remainingPokemon","startGame","map","pokemonName","className","onClick","Gameboard","pokeballStyles","handleGameClick","pokemon","pokeball","style","e","GameOver","userTime","userPokemon","history","useHistory","useState","askName","setAskName","name","setName","toFixed","placeholder","type","value","maxLength","onChange","target","push","time","user","firestore","collection","add","uid","addToLeaderboards","Game","top","left","opacity","setPokeballStyles","displayInstructions","setDisplayInstructions","gameOver","setGameOver","setLoadingPokemon","setRemainingPokemon","setUserTime","setUserPokemon","useEffect","availablePokemon","randomNumber1","Math","floor","random","pokemon1","splice","randomNumber2","pokemon2","pokemon3","then","doc","set","startTime","Timestamp","now","initGame","frame","document","getElementById","widthDifference","width","heightDifference","height","mouseX","round","pageX","offsetLeft","mouseY","pageY","querySelector","offsetHeight","pokeballImg","pokeballLeft","pokeballRight","pokeballTop","pokeballBottom","pokemonData","where","FieldPath","documentId","get","querySnapshot","forEach","unshift","data","find","location","catch","err","console","log","checkClick","result","tempRemainingPokemon","foundPokemonIndex","indexOf","endTime","merge","endGame","getUserData","delete","deleteGameSession","Leaderboards","allLeaderboards","setAllLeaderboards","top10","setTop10","currentUserBestRank","setCurrentUserBestRank","currentUserBest","setCurrentUserBest","player","setPlayer","unsubscribe","orderBy","onSnapshot","leaderboardData","slice","userIndex","findIndex","person","displayUser","i","colSpan","App","basename","process","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"qPAAe,MAA0B,wD,OCU1BA,EARA,WACb,OACE,iCACE,qBAAKC,GAAG,QAAQC,IAAKC,EAAOC,IAAI,6B,kCCQrCC,IAASC,KAAKC,OAAkDF,IAASG,MAAlDH,IAASI,cATZ,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAKF,IAAMC,EAAc,WACzB,OAAOX,IAASY,OAAOD,aAmCZE,EAAa,WACxB,OAAOb,IAASY,OAAOE,qBCpBVC,EAhCM,SAACC,GACpB,IAAQC,EAAgDD,EAAhDC,eAAgBC,EAAgCF,EAAhCE,iBAAkBC,EAAcH,EAAdG,UAE1C,OACE,qCACE,yEACA,oGACEF,GACAC,EAAiBE,KAAI,SAACC,GACpB,OACE,qBAEEC,UAAU,iBACVzB,IAAG,8BAAyBwB,EAAzB,QACHtB,IAAKsB,GAHAA,MAOb,+BACE,8CACA,yEACA,uEACA,qGACA,8CAEF,wBAAQC,UAAU,QAAQC,QAASJ,EAAnC,4BCzBS,MAA0B,4DCA1B,MAA0B,qCCsC1BK,EAnCG,SAACR,GACjB,IAAQE,EAAsDF,EAAtDE,iBAAkBO,EAAoCT,EAApCS,eAAgBC,EAAoBV,EAApBU,gBAE1C,OACE,qCACE,qBAAKJ,UAAU,YAAf,SACGJ,EAAiBE,KAAI,SAACO,GACrB,OACE,qBAEEL,UAAU,iBACVzB,IAAG,8BAAyB8B,EAAzB,QACH5B,IAAK4B,GAHAA,QASb,qBACEL,UAAU,WACVzB,IAAK+B,EACL7B,IAAI,qBACJ8B,MAAOJ,IAGT,qBACEF,QAAS,SAACO,GAAD,OAAOJ,EAAgBI,IAChClC,GAAG,YACHC,IAAKuB,EACLrB,IAAI,kBC0BGgC,EAtDE,SAACf,GAChB,IAAQgB,EAA0BhB,EAA1BgB,SAAUC,EAAgBjB,EAAhBiB,YACZC,EAAUC,cAEhB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEA,OACE,qCACE,kDACA,uDAA0BR,EAASS,QAAQ,GAA3C,eACA,+EACEJ,EAUA,qCACE,wBAAOf,UAAU,aAAjB,6BAEE,uBACEoB,YAAY,MACZC,KAAK,OACLC,MAAOL,EACPM,UAAU,KACVC,SAAU,SAAChB,GAAD,OAAOU,EAAQV,EAAEiB,OAAOH,aAGtC,wBACEtB,UAAU,YACVC,QAAS,kBAAMW,EAAQc,KAAK,kBAF9B,oBAMA,wBACE1B,UAAU,SACVC,QAAS,WACPW,EAAQc,KAAK,iBLyCM,SAACT,EAAMZ,EAASsB,GAC/C,IAAMC,EAAOlD,IAASY,OAAOD,YAEtBX,IACJmD,YACAC,WAAW,gBACXC,IAAI,CACHd,KAAMA,GAAQ,MACdZ,QAASA,EACTsB,KAAMA,EACNrD,GAAIsD,EAAKI,MKlDDC,CAAkBhB,EAAMN,EAAaD,IAJzC,oBA1BF,qCACE,wBAAQV,UAAU,QAAQC,QAAS,kBAAMW,EAAQc,KAAK,kBAAtD,gBAGA,wBAAQ1B,UAAU,SAASC,QAAS,kBAAMe,GAAW,IAArD,wBCyIKkB,EAjJF,WACX,MAA4CpB,mBAAS,CACnDqB,IAAK,EACLC,KAAM,EACNC,QAAS,IAHX,mBAAOlC,EAAP,KAAuBmC,EAAvB,KAMA,EAAsDxB,oBAAS,GAA/D,mBAAOyB,EAAP,KAA4BC,EAA5B,KACA,EAAgC1B,oBAAS,GAAzC,mBAAO2B,EAAP,KAAiBC,EAAjB,KAEA,EAA4C5B,oBAAS,GAArD,mBAAOnB,EAAP,KAAuBgD,EAAvB,KACA,EAAgD7B,qBAAhD,mBAAOlB,EAAP,KAAyBgD,EAAzB,KAEA,EAAgC9B,mBAAS,GAAzC,mBAAOJ,EAAP,KAAiBmC,EAAjB,KACA,EAAsC/B,mBAAS,IAA/C,mBAAOH,EAAP,KAAoBmC,EAApB,KA8GA,OA5BAC,qBAAU,WACR,IAAIC,EAAmB,CACrB,WACA,QACA,UACA,YACA,SACA,UACA,UACA,UACA,SAGIC,EAAgBC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAiBpE,QAC5DyE,EAAWL,EAAiBC,GAClCD,EAAiBM,OAAOL,EAAe,GAEvC,IAAMM,EAAgBL,KAAKC,MAAMD,KAAKE,SAAWJ,EAAiBpE,QAC5D4E,EAAWR,EAAiBO,GAClCP,EAAiBM,OAAOC,EAAe,GAEvC,IACME,EAAWT,EADKE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAiBpE,SAGlEgE,EAAoB,CAACS,EAAUG,EAAUC,IACzCd,GAAkB,KACjB,IAECJ,EAEA,cAAC,EAAD,CACE5C,eAAgBA,EAChBC,iBAAkBA,EAClBC,UAjHY,WAChB2C,GAAuB,GAEvBjD,IAAamE,MAAK,YNbE,SAACrD,GACvB,IAAMuB,EAAOlD,IAASY,OAAOD,YACtBX,IAASmD,YAAYC,WAAW,iBAAiB6B,IAAI/B,EAAKI,KAAK4B,IAAI,CACxEvD,QAASA,EACTwD,UAAWnF,IAASmD,UAAUiC,UAAUC,QMUtCC,CAASpE,SAgHD6C,EASH,cAAC,EAAD,CAAU/B,SAAUA,EAAUC,YAAaA,IAPhD,cAAC,EAAD,CACEf,iBAAkBA,EAClBO,eAAgBA,EAChBC,gBAjHkB,SAACI,GACvB,IAAMyD,EAAQC,SAASC,eAAe,aAGhCC,EAAkBH,EAAMI,MAAQ,KAChCC,EAAmBL,EAAMM,OAAS,IAElCC,EAAStB,KAAKuB,OAAOjE,EAAEkE,MAAQT,EAAMU,YAAcP,GAEnDQ,EAAS1B,KAAKuB,OACjBjE,EAAEqE,MACDX,SAASY,cAAc,UAAUC,aACjCb,SAASY,cAAc,cAAcC,cACrCT,GAGEU,EAAcd,SAASY,cAAc,aAC3CxC,EAAkB,CAChBH,IAAK3B,EAAEqE,MAAQG,EAAYT,OAAS,EACpCnC,KAAM5B,EAAEkE,MAAQM,EAAYX,MAAQ,EACpChC,QAAS,MNFW,SACxB4C,EACAC,EACAC,EACAC,EACAxF,GAEA,IAAMyF,EAAc,GAEpB,OAAO3G,IACJmD,YACAC,WAAW,qBACXwD,MAAM5G,IAASmD,UAAU0D,UAAUC,aAAc,KAAM5F,GACvD6F,MACA/B,MAAK,SAACgC,GAKL,OAJAA,EAAcC,SAAQ,SAACtF,GACrBgF,EAAYO,QAAQvF,EAAQwF,WAGvBR,EAAYS,MACjB,SAACzF,GAAD,OACEA,EAAQ0F,SAAS,IAAMd,GACvB5E,EAAQ0F,SAAS,IAAMb,GACvB7E,EAAQ0F,SAAS,IAAMZ,GACvB9E,EAAQ0F,SAAS,IAAMX,QAG5BY,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MMH5BG,CAhBEnC,EAAMI,MAAQ,IACVG,EAASQ,EAAYX,MAAQ,EAC7BG,EAASQ,EAAYX,MAEzBJ,EAAMI,MAAQ,IACVG,EAASQ,EAAYX,MAAQ,EAC7BG,EAASQ,EAAYX,MAEzBJ,EAAMM,OAAS,IACXK,EAASI,EAAYT,OAAS,EAC9BK,EAASI,EAAYT,OAEzBN,EAAMM,OAAS,IACXK,EAASI,EAAYT,OAAS,EAC9BK,EAASI,EAAYT,OAOzB3E,GACA8D,MAAK,SAAC2C,GAEN,GADAH,QAAQC,IAAIE,GACU,kBAAXA,EAAqB,CAC9B,IAAMC,EAAoB,YAAO1G,GAC3B2G,EAAoB3G,EAAiB4G,QAAQH,EAAOpF,MAC1DqF,EAAqBhD,OAAOiD,EAAmB,GAC3CD,EAAqB1H,OAAS,EAChCgE,EAAoB0D,INjEP,WACrB,IAAM1E,EAAOlD,IAASY,OAAOD,YAC7B,OAAOX,IAASmD,YAAYC,WAAW,iBAAiB6B,IAAI/B,EAAKI,KAAK4B,IACpE,CACE6C,QAAS/H,IAASmD,UAAUiC,UAAUC,OAExC,CAAE2C,OAAO,IM6DHC,GAAUjD,MAAK,YNpDE,WACzB,IAAM9B,EAAOlD,IAASY,OAAOD,YAG7B,OADeX,IAASmD,YAAYC,WAAW,iBAAiB6B,IAAI/B,EAAKI,KAC3DyD,MAAM/B,MAAK,SAACC,GACxB,OAAOA,EAAIkC,WMgDHe,GACGlD,MAAK,SAAC2C,GACLxD,EAAYwD,EAAOI,QAAUJ,EAAOxC,WACpCf,EAAeuD,EAAOhG,YAEvBqD,MAAK,kBN/Da,WAC/B,IAAM9B,EAAOlD,IAASY,OAAOD,YAC7B,OAAOX,IAASmD,YAAYC,WAAW,iBAAiB6B,IAAI/B,EAAKI,KAAK6E,SM6D9CC,SAGhBpE,GAAY,YCNPqE,G,MA3FM,WACnB,MAA8CjG,mBAAS,IAAvD,mBAAOkG,EAAP,KAAwBC,EAAxB,KACA,EAA0BnG,mBAAS,IAAnC,mBAAOoG,EAAP,KAAcC,EAAd,KACA,EAAsDrG,qBAAtD,mBAAOsG,EAAP,KAA4BC,EAA5B,KACA,EAA8CvG,qBAA9C,mBAAOwG,EAAP,KAAwBC,EAAxB,KACA,EAA4BzG,mBAASzB,KAArC,mBAAOmI,EAAP,KAAeC,EAAf,KAEKD,GAAQjI,IAAamE,MAAK,kBAAM+D,EAAUpI,QAE/C0D,qBAAU,WACR,IAAM2E,EAAchJ,IACjBmD,YACAC,WAAW,gBACX6F,QAAQ,OAAQ,OAChBC,YAAW,SAAClC,GACX,IAAMmC,EAAkB,GACxBnC,EAAcC,SAAQ,SAAC/D,GACrBiG,EAAgBnG,KAAKE,EAAKiE,WAE5BoB,EAAmBY,MAGvB,OAAO,WACLH,OAED,IAEH3E,qBAAU,WAER,GADAoE,EAASH,EAAgBc,MAAM,EAAG,KAC9BN,EAAQ,CACV,IAAMO,EAAYf,EAAgBgB,WAChC,SAACC,GAAD,OAAYA,EAAO3J,KAAOkJ,EAAOxF,OAEnCuF,EAAmBP,EAAgBe,IACnCV,EAAuBU,MAExB,CAACf,EAAiBQ,IAErB,IAAMU,EAAc,SAACtG,EAAMuG,GACzB,OACE,qBAEEnI,UAAWmI,EAAI,IAAMvG,IAAS0F,EAAkB,YAAc,KAFhE,UAIE,qBAAItH,UAAU,OAAd,UAAsBmI,EAAI,EAA1B,QACA,oBAAInI,UAAU,OAAd,SAAsB4B,EAAKX,OAC3B,qBAAIjB,UAAU,UAAd,UACG4B,EAAKvB,QAAQ,GADhB,IACqB,IACE,YAApBuB,EAAKvB,QAAQ,GAAmBuB,EAAKvB,QAAQ,GAAK,WAFrD,IAEkE,IAC3C,YAApBuB,EAAKvB,QAAQ,GAAmBuB,EAAKvB,QAAQ,GAAK,WAHrD,OAKA,qBAAIL,UAAU,OAAd,UAAsB4B,EAAKD,KAAKR,QAAQ,GAAxC,SAVKS,EAAKX,KAAOW,EAAKD,OAe5B,OACE,sBAAKrD,GAAG,eAAR,UACE,8CACC8I,EAAsB,KAA+B,IAAzBA,GAC3B,mBAAGpH,UAAU,YAAb,4BAEF,kCACE,gCACE,+BACE,sCACA,sCACA,gDACA,2CAGJ,uBAAOA,UAAU,oBAAjB,SACGkH,EAAMpH,KAAI,SAAC8B,EAAMuG,GAAP,OAAaD,EAAYtG,EAAMuG,WAG7Cf,EAAsB,IACrB,kCACE,gCACE,6BACE,oBAAIgB,QAAQ,IAAZ,gCAGJ,uBAAOpI,UAAU,oBAAjB,SACGkI,EAAYZ,EAAiBF,a,MCrE3BiB,MAdf,WACE,OACE,cAAC,IAAD,CAAeC,SAAUC,gBAAzB,SACE,sBAAKvI,UAAU,wBAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwI,OAAK,EAACC,KAAK,IAAIC,UAAWxG,IACjC,cAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,gBAAgBC,UAAW3B,aCRvD4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3E,SAASC,eAAe,U","file":"static/js/main.80c2a55a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pallet-town-on-parade-title.efdc353a.png\";","import title from '../img/pallet-town-on-parade-title.png';\n\nconst Header = () => {\n  return (\n    <header>\n      <img id='title' src={title} alt='Pallet Town On Parade' />\n    </header>\n  );\n};\n\nexport default Header;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAeqwNXZKfTkNi8zXI-Sk-gDMGAuLv5HTA',\n  authDomain: 'wheres-waldo-c710d.firebaseapp.com',\n  projectId: 'wheres-waldo-c710d',\n  storageBucket: 'wheres-waldo-c710d.appspot.com',\n  messagingSenderId: '323021756225',\n  appId: '1:323021756225:web:fe289f8025376aeb0973c0',\n};\n\n!firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app();\n\nexport const currentUser = () => {\n  return firebase.auth().currentUser;\n};\n\nexport const initGame = (pokemon) => {\n  const user = firebase.auth().currentUser;\n  return firebase.firestore().collection('game-sessions').doc(user.uid).set({\n    pokemon: pokemon,\n    startTime: firebase.firestore.Timestamp.now(),\n  });\n};\n\nexport const endGame = () => {\n  const user = firebase.auth().currentUser;\n  return firebase.firestore().collection('game-sessions').doc(user.uid).set(\n    {\n      endTime: firebase.firestore.Timestamp.now(),\n    },\n    { merge: true }\n  );\n};\n\nexport const deleteGameSession = () => {\n  const user = firebase.auth().currentUser;\n  return firebase.firestore().collection('game-sessions').doc(user.uid).delete();\n};\n\nexport const getUserData = () => {\n  const user = firebase.auth().currentUser;\n\n  const docRef = firebase.firestore().collection('game-sessions').doc(user.uid);\n  return docRef.get().then((doc) => {\n    return doc.data();\n  });\n};\n\nexport const anonSignIn = () => {\n  return firebase.auth().signInAnonymously();\n};\n\nexport const checkClick = (\n  pokeballLeft,\n  pokeballRight,\n  pokeballTop,\n  pokeballBottom,\n  remainingPokemon\n) => {\n  const pokemonData = [];\n\n  return firebase\n    .firestore()\n    .collection('pokemon-locations')\n    .where(firebase.firestore.FieldPath.documentId(), 'in', remainingPokemon)\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((pokemon) => {\n        pokemonData.unshift(pokemon.data());\n      });\n\n      return pokemonData.find(\n        (pokemon) =>\n          pokemon.location[0] >= pokeballLeft &&\n          pokemon.location[0] <= pokeballRight &&\n          pokemon.location[1] >= pokeballTop &&\n          pokemon.location[1] <= pokeballBottom\n      );\n    })\n    .catch((err) => console.log(err));\n};\n\n// Load Leaderboards located in leaderboards.js -> allows for live reloading\n\nexport const addToLeaderboards = (name, pokemon, time) => {\n  const user = firebase.auth().currentUser;\n\n  return firebase\n    .firestore()\n    .collection('leaderboards')\n    .add({\n      name: name || 'Ash',\n      pokemon: pokemon,\n      time: time,\n      id: user.uid,\n    });\n};\n","const Instructions = (props) => {\n  const { loadingPokemon, remainingPokemon, startGame } = props;\n\n  return (\n    <>\n      <p>Welcome to Pallet Town's annual parade! </p>\n      <p>This year we have selected the following Pokemon for you to catch:</p>\n      {!loadingPokemon &&\n        remainingPokemon.map((pokemonName) => {\n          return (\n            <img\n              key={pokemonName}\n              className='hidden-pokemon'\n              src={`/img/hidden-pokemon/${pokemonName}.svg`}\n              alt={pokemonName}\n            />\n          );\n        })}\n      <dl>\n        <dt>How to play:</dt>\n        <dd>1. Click on the map to throw a Pokeball</dd>\n        <dd>2. Aim for the center of each Pokemon</dd>\n        <dd>3. Catch 'em all as fast as you can to be added to the leaderboards</dd>\n        <dd>Have Fun!</dd>\n      </dl>\n      <button className='start' onClick={startGame}>\n        Start Game\n      </button>\n    </>\n  );\n};\n\nexport default Instructions;\n","export default __webpack_public_path__ + \"static/media/pallet-town-on-parade-gameboard.3cf50eb5.jpg\";","export default __webpack_public_path__ + \"static/media/pokeball.5a45c02d.svg\";","import map from '../img/pallet-town-on-parade-gameboard.jpg';\nimport pokeball from '../img/pokeball.svg';\n\nconst Gameboard = (props) => {\n  const { remainingPokemon, pokeballStyles, handleGameClick } = props;\n\n  return (\n    <>\n      <div className='remaining'>\n        {remainingPokemon.map((pokemon) => {\n          return (\n            <img\n              key={pokemon}\n              className='hidden-pokemon'\n              src={`/img/hidden-pokemon/${pokemon}.svg`}\n              alt={pokemon}\n            />\n          );\n        })}\n      </div>\n\n      <img\n        className='pokeball'\n        src={pokeball}\n        alt='Targeting Pokeball'\n        style={pokeballStyles}\n      />\n\n      <img\n        onClick={(e) => handleGameClick(e)}\n        id='gameboard'\n        src={map}\n        alt='Gameboard'\n      />\n    </>\n  );\n};\n\nexport default Gameboard;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { addToLeaderboards } from '../firebase';\n\nconst GameOver = (props) => {\n  const { userTime, userPokemon } = props;\n  const history = useHistory();\n\n  const [askName, setAskName] = useState(false);\n  const [name, setName] = useState('');\n\n  return (\n    <>\n      <h2>Congratulations!</h2>\n      <p>You found everyone in {userTime.toFixed(2)} seconds!</p>\n      <p>Would you like to be added to the leaderboard?</p>\n      {!askName ? (\n        <>\n          <button className='noBtn' onClick={() => history.push('/leaderboards')}>\n            No\n          </button>\n          <button className='yesBtn' onClick={() => setAskName(true)}>\n            Yes\n          </button>\n        </>\n      ) : (\n        <>\n          <label className='name-input'>\n            Whats your name?\n            <input\n              placeholder='Ash'\n              type='text'\n              value={name}\n              maxLength='12'\n              onChange={(e) => setName(e.target.value)}\n            />\n          </label>\n          <button\n            className='cancelBtn'\n            onClick={() => history.push('/leaderboards')}\n          >\n            Cancel\n          </button>\n          <button\n            className='addBtn'\n            onClick={() => {\n              history.push('/leaderboards');\n              addToLeaderboards(name, userPokemon, userTime);\n            }}\n          >\n            Add\n          </button>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default GameOver;\n","import React, { useState, useEffect } from 'react';\nimport {\n  anonSignIn,\n  checkClick,\n  initGame,\n  endGame,\n  getUserData,\n  deleteGameSession,\n} from '../firebase';\nimport Instructions from './Instructions';\nimport Gameboard from './Gameboard';\nimport GameOver from './GameOver';\n\nconst Game = () => {\n  const [pokeballStyles, setPokeballStyles] = useState({\n    top: 0,\n    left: 0,\n    opacity: 0,\n  });\n\n  const [displayInstructions, setDisplayInstructions] = useState(true);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [loadingPokemon, setLoadingPokemon] = useState(true);\n  const [remainingPokemon, setRemainingPokemon] = useState();\n\n  const [userTime, setUserTime] = useState(0);\n  const [userPokemon, setUserPokemon] = useState([]);\n\n  const startGame = () => {\n    setDisplayInstructions(false);\n\n    anonSignIn().then(() => {\n      initGame(remainingPokemon);\n    });\n  };\n\n  const handleGameClick = (e) => {\n    const frame = document.getElementById('gameboard');\n\n    // Gameboard/frame max size is 1347x959\n    const widthDifference = frame.width / 1347;\n    const heightDifference = frame.height / 959;\n\n    const mouseX = Math.round((e.pageX - frame.offsetLeft) / widthDifference);\n\n    const mouseY = Math.round(\n      (e.pageY -\n        document.querySelector('header').offsetHeight -\n        document.querySelector('.remaining').offsetHeight) /\n        heightDifference\n    );\n\n    const pokeballImg = document.querySelector('.pokeball');\n    setPokeballStyles({\n      top: e.pageY - pokeballImg.height / 2,\n      left: e.pageX - pokeballImg.width / 2,\n      opacity: 100,\n    });\n\n    // Due to large size difference on mobile, pokeball edges use a larger value\n    // to help make sure pokeball is accurate\n    const pokeballLeft =\n      frame.width > 500\n        ? mouseX - pokeballImg.width / 2\n        : mouseX - pokeballImg.width;\n    const pokeballRight =\n      frame.width > 500\n        ? mouseX + pokeballImg.width / 2\n        : mouseX + pokeballImg.width;\n    const pokeballTop =\n      frame.height > 500\n        ? mouseY - pokeballImg.height / 2\n        : mouseY - pokeballImg.height;\n    const pokeballBottom =\n      frame.height > 500\n        ? mouseY + pokeballImg.height / 2\n        : mouseY + pokeballImg.height;\n\n    checkClick(\n      pokeballLeft,\n      pokeballRight,\n      pokeballTop,\n      pokeballBottom,\n      remainingPokemon\n    ).then((result) => {\n      console.log(result);\n      if (typeof result === 'object') {\n        const tempRemainingPokemon = [...remainingPokemon];\n        const foundPokemonIndex = remainingPokemon.indexOf(result.name);\n        tempRemainingPokemon.splice(foundPokemonIndex, 1);\n        if (tempRemainingPokemon.length > 0)\n          setRemainingPokemon(tempRemainingPokemon);\n        else {\n          endGame().then(() => {\n            getUserData()\n              .then((result) => {\n                setUserTime(result.endTime - result.startTime);\n                setUserPokemon(result.pokemon);\n              })\n              .then(() => deleteGameSession());\n          });\n\n          setGameOver(true);\n        }\n      }\n    });\n  };\n\n  useEffect(() => {\n    let availablePokemon = [\n      'kabutops',\n      'ditto',\n      'pikachu',\n      'magnemite',\n      'gengar',\n      'diglett',\n      'mr_mime',\n      'persian',\n      'eevee',\n    ];\n\n    const randomNumber1 = Math.floor(Math.random() * availablePokemon.length);\n    const pokemon1 = availablePokemon[randomNumber1];\n    availablePokemon.splice(randomNumber1, 1);\n\n    const randomNumber2 = Math.floor(Math.random() * availablePokemon.length);\n    const pokemon2 = availablePokemon[randomNumber2];\n    availablePokemon.splice(randomNumber2, 1);\n\n    const randomNumber3 = Math.floor(Math.random() * availablePokemon.length);\n    const pokemon3 = availablePokemon[randomNumber3];\n\n    setRemainingPokemon([pokemon1, pokemon2, pokemon3]);\n    setLoadingPokemon(false);\n  }, []);\n\n  if (displayInstructions) {\n    return (\n      <Instructions\n        loadingPokemon={loadingPokemon}\n        remainingPokemon={remainingPokemon}\n        startGame={startGame}\n      />\n    );\n  } else if (!gameOver) {\n    return (\n      <Gameboard\n        remainingPokemon={remainingPokemon}\n        pokeballStyles={pokeballStyles}\n        handleGameClick={handleGameClick}\n      />\n    );\n  } else {\n    return <GameOver userTime={userTime} userPokemon={userPokemon} />;\n  }\n};\n\nexport default Game;\n","import React, { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { anonSignIn, currentUser } from '../firebase';\nimport '../styles/Leaderboards.css';\n\nconst Leaderboards = () => {\n  const [allLeaderboards, setAllLeaderboards] = useState([]);\n  const [top10, setTop10] = useState([]);\n  const [currentUserBestRank, setCurrentUserBestRank] = useState();\n  const [currentUserBest, setCurrentUserBest] = useState();\n  const [player, setPlayer] = useState(currentUser());\n\n  if (!player) anonSignIn().then(() => setPlayer(currentUser()));\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection('leaderboards')\n      .orderBy('time', 'asc')\n      .onSnapshot((querySnapshot) => {\n        const leaderboardData = [];\n        querySnapshot.forEach((user) => {\n          leaderboardData.push(user.data());\n        });\n        setAllLeaderboards(leaderboardData);\n      });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  useEffect(() => {\n    setTop10(allLeaderboards.slice(0, 10));\n    if (player) {\n      const userIndex = allLeaderboards.findIndex(\n        (person) => person.id === player.uid\n      );\n      setCurrentUserBest(allLeaderboards[userIndex]);\n      setCurrentUserBestRank(userIndex);\n    }\n  }, [allLeaderboards, player]);\n\n  const displayUser = (user, i) => {\n    return (\n      <tr\n        key={user.name + user.time}\n        className={i > 10 || user === currentUserBest ? 'user-best' : null}\n      >\n        <td className='rank'>{i + 1}. </td>\n        <td className='name'>{user.name}</td>\n        <td className='pokemon'>\n          {user.pokemon[0]},{' '}\n          {user.pokemon[1] !== 'mr_mime' ? user.pokemon[1] : 'Mr. Mime'},{' '}\n          {user.pokemon[2] !== 'mr_mime' ? user.pokemon[2] : 'Mr. Mime'},\n        </td>\n        <td className='time'>{user.time.toFixed(2)}s</td>\n      </tr>\n    );\n  };\n\n  return (\n    <div id='leaderboards'>\n      <h2>Leaderboards</h2>\n      {currentUserBestRank < 10 && currentUserBestRank !== -1 && (\n        <p className='user-best'>Your Best Time</p>\n      )}\n      <table>\n        <thead>\n          <tr>\n            <th>Rank</th>\n            <th>Name</th>\n            <th>Pokemon Caught</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody className='leaderboard-entry'>\n          {top10.map((user, i) => displayUser(user, i))}\n        </tbody>\n      </table>\n      {currentUserBestRank > 10 && (\n        <table>\n          <thead>\n            <tr>\n              <th colSpan='4'>Your Best Time</th>\n            </tr>\n          </thead>\n          <tbody className='leaderboard-entry'>\n            {displayUser(currentUserBest, currentUserBestRank, true)}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default Leaderboards;\n","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Game from './components/Game';\nimport Leaderboards from './components/Leaderboards';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className='Pallet-Town-On-Parade'>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Game} />\n          <Route exact path='/leaderboards' component={Leaderboards} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}